name: "nix-daemon: Inject GitHub Token"
description: |
  Injects the GitHub Token into either the systemd service or launchctl daemon
  for the Nix daemon.
inputs:
  nix_cache_domain:
    description: "The https-hosted Nix build cache"
    required: true
    default: "nix-cache.fossi-foundation.org"
  nix_public_key:
    description: "The public key for the aforementioned Nix cache"
    required: true
    default: "nix-cache.fossi-foundation.org:3+K59iFwXqKsL7BNu6Guy0v+uTlwsxYQxjspXzqLYQs="
  github_token:
    description: "Optional GitHub Token to add to the Nix environment (to help avoid rate-limiting fetchers). It's heavily recommended to just use secrets.GITHUB_TOKEN in case a badly-written fetcher captures the environment somewhere (secrets.GITHUB_TOKEN is ephemeral.)"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Install Upstream Nix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        # OpenLane cachix temporarily included until most things copied over
        determinate: false
        extra-conf: |
          access-tokens = github.com=${{ inputs.github_token }}
          extra-substituters = https://${{ inputs.nix_cache_domain }} https://openlane.cachix.org
          extra-trusted-public-keys = ${{ inputs.nix_public_key }} openlane.cachix.org-1:qqdwh+QMNGmZAuyeQJTH9ErW57OWSvdtuwfBKdS254E=
    - name: Inject GitHub Token into Daemon Environment
      uses: ./../nix_daemon_inject_github_token
      if: inputs.github_token != ''
      with:
        github_token: ${{ inputs.github_token }}
